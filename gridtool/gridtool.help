gridtool - simple operations on grids (for building deformation grids)

Syntax:
  gridtool  input_grid [commands ...] output_grid
  gridtool  command_file

Grid files are simple space delimited files containing on each line an x and
y value, and one or more values (the same number on each line).  Grids may be
in row or column major order.  It is assumed (and to some extent tested) that
the grids points are on a regular orthogonal grid.

The following commands can be included on the command line, or 
included in the command file

read [csv] [maxcols n] grid_file
   Loads a new grid file.  Maximum number of columns can limit the number
   of data columns read (ie count of data columns after lon/lat)

create minx max xspacing miny maxy yspacing columns xxx
create extents [csv] gridfile xspacing yspacing columns xxxx
create extents wkt wktfile xspacing yspacing columns xxxx
   Creates a new grid based on the extents and x/y spacing. 
   xxx is a list of column names in the new grid, separated by +

write [csv] [columns xx] [ndp #] [dos] grid_file [where selection]
   Writes the current grid to a file.  The columns value can be a list of
   column names separated by '+', or none to output only the grid coordinates,
   or '*' to output all columns. The ndp value can optionally specify the
   number of decimal places for output values (through trailing 0's are
   always removed). If dos is specified then the grid file has MSDOS
   line endings (CR+LF), otherwise unix line endings (LF)
   
write_linzgrid crdsys header1 header2 header3 [resolution xx] [columns xx] filename
   Writes the current grid to a LINZ ASCII grid format file in filename.
   Uses the crdsys code and header lines.  The header lines can be replaced
   with file header_file_name, in which case three header lines will be read
   from the named file. The resolution defines the data resolution that will
   be specified in the output file, which will be used when it is converted
   to a binary format. The columns select which columns to include separated 
   by +, eg columns de+dn.  Default is all columns.

extents_wkt wkt_file
   Writes a WKT definition of the polygon to the specified file

zero [outside] selection
   Sets the values of selected nodes of the grid to zero

smooth (linear|quadratic|cubic) selection
   Recalculates the values at selected nodes in the grid to fit smoothly
   with other values (minimizing single, double, or triple differences on
   rows or columns)

alignto [csv] parent_grid_file
   expands the grid to align with a parent file.  Just based on the parent
   extents and resolution.  The grid will only be aligned by adding rows 
   and columns to be as near the parent grid as it can.

trimto [buffer n] [csv] parent_grid_file
trimto [buffer n] wkt wkt_file
trimto [buffer n] extents xmin ymin xmax ymax
   Trims the grid to not exceed the extents of the parent grid or 
   wkt polygon.  If a buffer is specified the buffer margin is added
   to the extents before trimming.  Note that the grid will not 
   be expanded by this.

add [csv] [maxcols n] grid_file [where selection]
subtract [csv] [maxcols n] grid_file [where selection]
replace [csv] [maxcols n] grid_file [where selection]
   Add, subtract, or replace with the values extrapolated from grid_file 
   to the values at each node of the loaded grid.  Has no effect outside the
   extents of the second grid file.

multiply factor
   Multiply all values in the grid by the factor

resize [relative] rowmin colmin rowmax colmax
   Resize to only include rows between rowmin and rowmax and columns
   between colmin and colmax

trim [tolerance #.###] bordersize
   Trim off zero rows and columns from edge of grid, leaving at least
   borderSize zero rows and columns.  If borderSize is greater than 0
   then the grid may be expanded to ensure the required number of zero
   rows and columns.  If a tolerance is specified then values less than
   the tolerance in absolute value can be trimmed.

evaluate [with_ids] [ndp #] [csv] [at] points_file [to] output_file
evaluate [ndp #] [csv] [at] x y [to] output_file
   Evaluates the grid at a set of points in a points file and writes the
   results to an output file.  If with_ids is specified then the points
   file includes a point id as the first column (before the x and y values).
   ndp specifies the number of decimal places in the output data.  csv
   specifies that the input and output use commas as delimiters.  

affected_area selection wkt_output_file
   Creates a wkt polygon defining the boundary of the cells affected by 
   a selection file.  A cell is affected if one of its nodes lies within the 
   selection set.

colstats
   Print out the mean, minimum, and maximum value for each column

A selection of grid points is defined by a series of commands joined by "and".
or "not".  Selections preceded with "and" are added, those preceded with "not" 
are removed.  Selection commands are one of:

inside|outside wkt_file: File consists of one or more WKT linestring or polygon 
   definitions. Inside/outside of each ring is used.

nearest_to xy_file: xy_file is a list of x,y coordinates one per line.  Nearest 
   grid point to each point in file is selected.

edge|inside_edge n:  All values in the with n rows/columns of the edge are affected
   (or all other values if inside_edge)

where condition: A condition is entered as "where field (<|<=|==|!=|>=|>) value", 
   where field is a field name (either defined on a space separated header line, 
   or field_1, field_2, ...).

expand distance: Expands (or contracts) the currently marked area by the specified
   number of grid cells

on_grid [csv] grid_file: Marks points that are on another grid.  For add, subtract,
   and replace commands the [csv] option is not required if the grid file is the
   same as that being added, subtracted, or replaced.

